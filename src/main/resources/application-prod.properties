# Configuracion para produccion (PostgreSQL en Render)
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# JWT Configuration para PRODUCCION
# Generar un nuevo secret diferente al de desarrollo para mayor seguridad
jwt.secret=${JWT_SECRET}

# Opcional: Puedes usar un tiempo de expiracion diferente en produccion
#jwt.expiration=${JWT_EXPIRATION:86400000}

# CORS para produccion (Vercel)
cors.allowed.origins=https://"nombre".vercel.app

# Configuracion especifica de HikariCP para PostgreSQL
spring.datasource.hikari.connection-test-query=SELECT 1

# JPA para PostgreSQL - sin especificar dialecto (Spring lo detecta automaticamente)
spring.jpa.show-sql=false
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=postgresql

# Optimizaciones para produccion
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.format_sql=false

# Logging para produccion (menos verbose)
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Optimizaciones para Native Image
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false
spring.jpa.properties.hibernate.jdbc.batch_size=15
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Native Image memory optimizations
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# Disable unnecessary features for native
spring.jmx.enabled=false

